})
deg_common_in_at_least_two <- deg_in_common(deg_list = deg_lists,
nb_in_common = 2)
deg_common_in_at_least_three <- deg_in_common(deg_list = deg_lists,
nb_in_common = 3)
deg_common_in_at_least_two$in_three <- rownames(deg_common_in_at_least_two) %in% rownames(deg_common_in_at_least_three)
deg_common_in_at_least_two$opposite <- apply(X = deg_common_in_at_least_two,
MARGIN = 1,
FUN = function(x){
return(any(x==1) & any(x==-1))
})
deg_common_in_at_least_two$HGNC <- rownames(deg_common_in_at_least_two)
deg_common_in_at_least_three <- deg_in_common(deg_list = deg_lists,
nb_in_common = 3)
deg_common_in_at_least_three$opposite <- apply(X = deg_common_in_at_least_three,
MARGIN = 1,
FUN = function(x){
return(any(x==1) & any(x==-1))
})
deg_pairwise_in_common_long <- deg_pairwise_in_common(deg_in_common(deg_list = deg_lists,
nb_in_common = 2))
# Heatmap piechart
heatmap_piechart <- ggplot(deg_pairwise_in_common_long) +
geom_rect(aes(xmin=0,
xmax=log_all,
ymin=cp1,
ymax=cp2,
fill=variable)) +
facet_grid(study_A~study_B)+
coord_polar(theta = "y")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(size = 10),
strip.background = element_blank())+
scale_fill_manual(values =c("#66BD63","#FDAE61","#D73027"))
# Heatmap barplot
heatmap_barplot <- ggplot(deg_pairwise_in_common_long, aes(x=variable, y=value, fill=variable)) +
geom_bar(stat="identity", width=1) +
# coord_polar("y", start=0)+
theme_void()+
facet_grid(study_A ~ study_B, drop = FALSE)
# Legend
legend <- expand.grid(log.var = c(TRUE), zone = c("1","5","20","60"))
legend <- mutate(legend,
proportion=rep(1,4),
size = c(1,5,20,60),
tot_size = c(1,5,20,60))
legend$log_tot_size <- log(legend$tot_size)
legend <- legend %>% group_by(zone) %>%
mutate(cp1=c(0,head(cumsum(proportion),-1)),
cp2=cumsum(proportion))
# Basic piechart
legend_plot <- ggplot(legend) + geom_rect(aes(xmin=0,
xmax=log_tot_size,
ymin=cp1,
ymax=cp2)) +
facet_grid(.~zone) +
coord_polar(theta = "y")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.text.x = element_text(size = 40),
strip.background = element_blank())
deg_pairwise_in_common_long
heatmap_piechart
logFC_combined_long <- melt(logFC_combined_df, id.vars = c("Symbol"), variable.name = "study")
logFC_combined_long_over_5 <- logFC_combined_long[which(abs(logFC_combined_long$value)>5),]
logFC_combined_long_under_5 <- logFC_combined_long[which(abs(logFC_combined_long$value)<=5),]
logFC_combined_long_over_3 <- logFC_combined_long[which(abs(logFC_combined_long$value)>3),]
logFC_combined_long_under_3 <- logFC_combined_long[which(abs(logFC_combined_long$value)<=3),]
logFC_per_study_hist <- ggplot(logFC_combined_long_under_3, aes(x = value, color = study))+
geom_histogram(bins = 100)+
facet_wrap(~study, ncol = 3)
# scale_color_manual(values = c(brewer.pal(8, "Reds")[5:8],brewer.pal(8, "Blues")[5:8]))
logFC_all_hist <- ggplot(logFC_combined_long, aes(x = value))+
geom_histogram(bins = 100)
adjPval_combined_long <- melt(adjPval_combined_df, id.vars = c("Symbol"), variable.name = "study")
ggplot(adjPval_combined_long, aes(x = value, color = study))+
geom_density()
# facet_wrap(~study, ncol = 3)
logFC_all_hist
logFC_per_study_hist
# Loading leading.edges columns
load("kegg_diff_pathways_network/kegg_diff_pathways_nodes_with_CFTR_interactors_df.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(RColorBrewer)
library(pheatmap)
library(ggplot2)
library(reshape2)
library(tidyr)
library(dplyr)
library(cluster)
getwd()
source("scripts/fgsea_comparison/fgsea_output_preprocess.R")
fgsea_lists <- lapply(fgsea_results_list,
function(fgsea_df) {
return(fgsea_diff_activated(fgsea_df,
padj_threshold = 0.25))
}
)
fgsea_nes_combined_df <- data.frame()
for (i_study in seq_along(fgsea_lists)){
# print(i_study)
fgsea_df <- fgsea_lists[[i_study]]
cols_to_combine <- fgsea_df[,c("pathway",
# "padj",
"NES")]
colnames(cols_to_combine) <- c("pathway",
# paste("NES",
studies_names[[i_study]])
# sep = "."))
if (i_study==1){
fgsea_nes_combined_df <- cols_to_combine
} else {
fgsea_nes_combined_df <- merge(fgsea_nes_combined_df,
cols_to_combine,
by ="pathway",
all = TRUE)
}
}
fgsea_nes_combined_df <- data.frame(fgsea_nes_combined_df)
rownames(fgsea_nes_combined_df) <- fgsea_nes_combined_df$pathway
fgsea_nes_combined_df$pathway <- NULL
fgsea_nes_combined_matrix <- t(apply( fgsea_nes_combined_df, 2, as.numeric))
colnames(fgsea_nes_combined_matrix) <- rownames(fgsea_nes_combined_df)
# distfunc <- function(x) daisy(x, metric = "euclidean")
# check for instances present in only 2 datasets
# test <- apply(fgsea_nes_combined_matrix, 2, function(v) length(table(v)) == 2)
# d <- distfunc(fgsea_nes_combined_matrix)
#
# clust <- pheatmap(as.matrix(d),
#          show_rownames = T)
# #
# studies_order <- gsub(x = studies_names[clust$tree_col$order],
#                       pattern = "[ |-]",
#                       replacement = ".")
fgsea_nb_diff_pathways_per_study <- data.frame()
for (i_study in 1:length(fgsea_lists)){
fgsea_app_output <- fgsea_lists[[i_study]]
fgsea_nb_diff_pathways_per_study <- rbind(fgsea_nb_diff_pathways_per_study,
data.frame(study = names(fgsea_lists)[i_study],
nb_pathways = nrow(fgsea_app_output),
UP = nrow(fgsea_app_output[which(fgsea_app_output$diff_activated=="UP"),]),
DOWN = nrow(fgsea_app_output[which(fgsea_app_output$diff_activated=="DOWN"),])))
}
fgsea_nb_diff_pathways_per_study_long <- melt(fgsea_nb_diff_pathways_per_study,
id.vars = c("study"),
variable.name = "shift",
value.name = "nb")
fgsea_nb_diff_pathways_per_study_long <- fgsea_nb_diff_pathways_per_study %>%
pivot_longer(cols = c("UP","DOWN"),
names_to = "shift",
values_to = "nb")
fgsea_nb_diff_pathways_per_study_long$study <- factor(fgsea_nb_diff_pathways_per_study_long$study,
levels = studies_names)
nb_diff_pathways_barplot <- ggplot(fgsea_nb_diff_pathways_per_study_long,
aes(x=study,
y=nb,
fill=shift))+
geom_bar(stat = "identity", position = position_dodge())+
scale_fill_manual(values = c(brewer.pal(3,"Greys")[2],
brewer.pal(11,"RdYlGn")[c(10,2)]))
source("scripts/fgsea_comparison/fgsea_comparison_utils.R")
names(fgsea_lists) <- gsub(pattern = "-| ",
replacement = ".",
names(fgsea_lists))
# Matrix NES of DEP x Studies
fgsea_es_diff_pathways <-
fgsea_nes_diff_pathways_in_common(fgsea_lists = fgsea_lists,
fgsea_combined_df = fgsea_nes_combined_df,
# studies_order = studies_order,
nb_in_common = 3)
# save(fgsea_es_diff_pathways,
#      file = "kegg_diff_pathways/fgsea_nes_diff_pathways.RData")
# Boolean Matrix of significantly DEP in Studies
diff_intersections_summary <-
fgsea_diff_pathways_in_common(fgsea_lists = fgsea_lists,
# studies_order = studies_order,
nb_in_common = 3)
# mask <- sapply(diff_intersections_summary, as.logical)
# fgsea_es_diff_pathways[!mask] <- NA
studies_order <- c("Verhaeghe",
"Voisin",
"Ogilvie.nasal",
"Ogilvie.bronchial",
"Clarke",
"Balloy",
"Saint.Criq.UNC",
"Zoso",
"Ling",
"Saint.Criq.SC")
# Removing pathways from the Disease subset of KEGG pathway
fgsea_es_diff_pathways$pathway_name <- rownames(fgsea_es_diff_pathways)
fgsea_es_diff_pathways <- fgsea_es_diff_pathways[rownames(fgsea_es_diff_pathways)!="AGE-RAGE signaling pathway in diabetic complications",]
diff_intersections_summary$pathway_name <- rownames(diff_intersections_summary)
diff_intersections_summary <- diff_intersections_summary[rownames(diff_intersections_summary)!="AGE-RAGE signaling pathway in diabetic complications",]
fgsea_es_diff_pathways_long <- pivot_longer(fgsea_es_diff_pathways,
cols = studies_order,
names_to = "study",
values_to = "NES")
diff_intersections_summary_long <- pivot_longer(diff_intersections_summary,
cols = studies_order,
names_to = "study",
values_to = "significance")
fgsea_es_diff_pathways_long$study <- factor(fgsea_es_diff_pathways_long$study,
levels = studies_order)
diff_intersections_summary_long$study <- factor(diff_intersections_summary_long$study,
levels = studies_order)
# revalue(fgsea_es_diff_pathways_long$study , c("beta"="two", "gamma"="three"))
good_studies_order <- c("Verhaeghe",
"Voisin",
"Ogilvie (nasal)",
"Ogilvie (bronchial)",
"Clarke",
"Balloy",
"Saint-Criq (UNC)",
"Zoso",
"Ling",
"Saint-Criq (SC)")
levels(fgsea_es_diff_pathways_long$study) <- good_studies_order
levels(diff_intersections_summary_long$study) <- good_studies_order
pathways_order <- c("Regulation of actin cytoskeleton",
"Osteoclast differentiation",
"Estrogen signaling pathway",
"T cell receptor signaling pathway",
"Cytokine-cytokine receptor interaction",
"Th17 cell differentiation",
"IL-17 signaling pathway",
"NF-kappa B signaling pathway",
"TNF signaling pathway",
"C-type lectin receptor signaling pathway",
"RIG-I-like receptor signaling pathway",
"Cytosolic DNA-sensing pathway",
"NOD-like receptor signaling pathway",
"Toll-like receptor signaling pathway",
"Viral protein interaction with cytokine and cytokine receptor")
fgsea_es_diff_pathways_long$pathway_name <- factor(fgsea_es_diff_pathways_long$pathway_name,
levels = pathways_order)
diff_intersections_summary_long$pathway_name <- factor(diff_intersections_summary_long$pathway_name,
levels = pathways_order)
fgsea_nes_diff_pathways_heatmap <- ggplot(fgsea_es_diff_pathways_long, aes(y = pathway_name,
x = study,
fill = NES))+
geom_tile(color = "white",
lwd = 1.5,
linetype = 1)+
geom_tile(data = fgsea_es_diff_pathways_long[which(diff_intersections_summary_long$significance!=0) ,],
fill = NA,
colour="black",
size=2)+
scale_fill_gradient2(low=brewer.pal(n = 7, name = "RdYlGn")[1],
mid=brewer.pal(n = 7, name = "RdYlGn")[4],
high=brewer.pal(n = 7, name = "RdYlGn")[7],
na.value = "#D9D9D9")+
scale_y_discrete(labels = function(x)
stringr::str_wrap(x, width = 40))+
theme(panel.background = element_blank(),
text = element_text(size = 36),
axis.text.x = element_text(vjust =1, hjust = 1, angle = 45, colour = "black"),
axis.text.y = element_text(colour = "black"),
axis.ticks = element_blank(),
axis.title = element_blank())
dep_pairwise_in_common_long <-
fgsea_dep_pairwise_in_common(fgsea_diff_pathways_in_common(fgsea_lists = fgsea_lists,
nb_in_common = 2))
# Heatmap piechart
heatmap_piechart <- ggplot(dep_pairwise_in_common_long) +
geom_rect(aes(xmin=0,
xmax=log_all,
ymin=cp1,
ymax=cp2,
fill=variable)) +
facet_grid(study_A~study_B)+
coord_polar(theta = "y")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.text = element_text(size = 10),
strip.background = element_blank())+
scale_fill_manual(values =c("#66BD63","#FDAE61","#D73027"))
# Legend
legend <- expand.grid(log.var = c(TRUE), zone = c("1","5","10","15"))
legend <- mutate(legend,
proportion=rep(1,4),
size = c(1,5,10,15),
tot_size = c(1,5,10,15))
legend$log_tot_size <- log(legend$tot_size)
legend <- legend %>% group_by(zone) %>%
mutate(cp1=c(0,head(cumsum(proportion),-1)),
cp2=cumsum(proportion))
# Basic piechart
legend_plot <- ggplot(legend) + geom_rect(aes(xmin=0,
xmax=log_tot_size,
ymin=cp1,
ymax=cp2)) +
facet_grid(.~zone) +
coord_polar(theta = "y")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.text.x = element_text(size = 40),
strip.background = element_blank())
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(tidyr)
library(tidyverse)
load("kegg_diff_pathways/fgsea_nes_diff_pathways.RData")
diff_pathways <- rownames(fgsea_es_diff_pathways)
# source("scripts/fgsea_comparison/fgsea_output_preprocess.R")
# for class PPI_network and preprocess_PPI_network()
source("scripts/pathways_to_network/network_utils.R")
# KEGG pathways from Omnipath
load("kegg_pathways/kegg_pathways_from_omnipath_list.RData")
load("kegg_pathways/kegg_pathways_from_omnipath_nodes_carac.RData")
kegg_pathway_df.signaling.interactions.df <-
do.call("rbind",
kegg_pathway_df.signaling.interactions.list.final)
load("kegg_pathways/symbols_from_kegg_pathways_from_omnipathR_list.RData")
kegg_pathway_df.signaling.nodes.df <-
do.call("rbind",
kegg_pathway_df.signaling.nodes.list.final)
# source("scripts/kegg_pathways_scripts/kegg_pathways_utils.R")
interactions_colnames_to_keep <- c("source",
"target",
"relation_id",
"kegg_id_source",
"kegg_id_target")
kegg_pathway_df.signaling.interactions.df <-
as_tibble(kegg_pathway_df.signaling.interactions.df)
kegg_pathways_interactions.unique. <-
kegg_pathway_df.signaling.interactions.df %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
# Effect arrow
effect_arrow.df <- unique(kegg_pathway_df.signaling.interactions.df[,c("effect", "arrow")])
effect_arrow.df <- effect_arrow.df %>%
mutate(effect = if_else(effect == "compound",
paste(effect, arrow, sep = " - "),
effect))
# effect_arrow.df %>%
#   mutate(effect)
#
# effect_arrow.df[which(effect_arrow.df$effect=="compound"),"effect"] <- paste(
#   effect_arrow.df[which(effect_arrow.df$effect=="compound"),"effect"],
#   effect_arrow.df[which(effect_arrow.df$effect=="compound"),"arrow"],
#   sep = " - ")
# Kegg pathways correction file
kegg_pathways_corrections <-
read.table("kegg_diff_pathways/kegg_diff_pathways_corrections_w_EZR_2023_07_07.txt",
sep = "\t",
header = T)
# Manual curation: for add_new_nodes_uniprot_ids()
source("scripts/kegg_pathways_scripts/kegg_pathways_manual_curation.R")
# Kegg pathways correction for gene symbols
kegg_pathways_nodes.carac.corrected <-
add_new_nodes_uniprot_ids(Symbol2UniprotID = kegg_pathways_nodes.carac,
corrections.df = kegg_pathways_corrections)
# Correct each diff pathways interactions with manual curation
diff_pathways.PPI_network.corrected.list <- lapply(diff_pathways,
function(diff_pathway_name){
# # to test
# diff_pathway_name <- diff_pathways[1]
print("##### CORRECTION #####")
print(diff_pathway_name)
# print("#####")
# diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[names(kegg_pathway_df.signaling.interactions.list.final)==diff_pathway_name][[1]]
diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[[diff_pathway_name]]
diff_pathway_df.interactions <-
as_tibble(diff_pathway_df.interactions)
diff_pathway_df.interactions.unique <-
diff_pathway_df.interactions %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
# diff_pathway_df.interactions.unique <- unique(diff_pathway_df.interactions[,!(colnames(diff_pathway_df.interactions) %in% c("source",
#                                                                                                                       "target",
#                                                                                                                       "relation_id",
#                                                                                                                       "kegg_id_source",
#                                                                                                                       "kegg_id_target"))])
diff_pathway_df.interactions.unique$manually_added <- FALSE
# diff_pathway_df.nodes <- kegg_pathway_df.signaling.nodes.list.final[names(kegg_pathway_df.signaling.nodes.list.final)==diff_pathway_name][[1]]
diff_pathway_df.nodes <-
kegg_pathway_df.signaling.nodes.list.final[[diff_pathway_name]]
diff_PPI_network <- new("PPI_network",
interactions=as.data.frame(diff_pathway_df.interactions.unique),
nodes=as.data.frame(diff_pathway_df.nodes))
## Preprocess
diff_PPI_network <- preprocess_PPI_network(diff_PPI_network)
# Preprocess
kegg_pathways_corrections.example <- kegg_pathways_corrections[which(kegg_pathways_corrections$pathway_name==diff_pathway_name),]
# print(kegg_pathways_corrections.example)
diff_PPI_network.corrected <-
correct_PPI_network(PPI_network = diff_PPI_network,
Symbol2UniprotID = kegg_pathways_nodes.carac.corrected,
corrections.df = kegg_pathways_corrections.example)
return(diff_PPI_network.corrected)
})
diff_pathways.interactions.corrected.list <- lapply(diff_pathways.PPI_network.corrected.list, function(PPI_network) return(PPI_network@interactions))
interactions_in_diff_kegg_pathways <- do.call("rbind", diff_pathways.interactions.corrected.list)
interactions_in_diff_kegg_pathways$interaction_id <- apply(X = interactions_in_diff_kegg_pathways[,c("uniprot_source",
"uniprot_target",
"effect")],
MARGIN = 1,
FUN = function(x) {
# print(x)
return(paste(x, collapse = "_"))
})
interactions_in_diff_kegg_pathways$value <- 1
interactions_in_diff_kegg_pathways.long <-
interactions_in_diff_kegg_pathways[,c("interaction_id","pathway_name", "value")]
interactions_in_diff_kegg_pathways_wide_df <- pivot_wider(interactions_in_diff_kegg_pathways.long,
names_from = "pathway_name",
values_from = "value")
# interactions_in_diff_kegg_pathways_wide_df <- dcast(interactions_in_diff_kegg_pathways,
#                                       interaction_id ~ pathway_name,
#                                       value.var = "value")
interactions_in_diff_kegg_pathways_wide_df[is.na(interactions_in_diff_kegg_pathways_wide_df)]<- 0
interactions_in_diff_kegg_pathways_wide_df$sum.interaction <- rowSums(interactions_in_diff_kegg_pathways_wide_df[,-1])
# if the sum is 1 then put the name of the pathway
interactions_in_diff_kegg_pathways_wide_df$pathway.interaction <- sapply(1:nrow(interactions_in_diff_kegg_pathways_wide_df), function(i_interaction){
if (interactions_in_diff_kegg_pathways_wide_df$sum.interaction[i_interaction]==1){
return(diff_pathways[which(interactions_in_diff_kegg_pathways_wide_df[i_interaction,diff_pathways]==1)])
} else {
return(NA)
}
})
interactions_in_diff_kegg_pathways.unique <- unique(interactions_in_diff_kegg_pathways[,!(colnames(interactions_in_diff_kegg_pathways) %in% c("pathway_name", "value", "manually_added","type"))])
interactions_in_diff_kegg_pathways.unique <- merge(interactions_in_diff_kegg_pathways.unique,
interactions_in_diff_kegg_pathways_wide_df,
by = "interaction_id")
# Good name
kegg_diff_pathways_interactions <- interactions_in_diff_kegg_pathways.unique
rm(kegg_pathways_interactions.unique,
interactions_in_diff_kegg_pathways,
interactions_in_diff_kegg_pathways_wide_df,
interactions_in_diff_kegg_pathways.unique)
# get the nodes
kegg_pathways_nodes <-
read.table(file = "kegg_pathways/symbols_from_kegg_pathways_from_omnipathR.txt",
sep = "\t")
diff_pathways.nodes.corrected.list <-
lapply(diff_pathways.PPI_network.corrected.list,
function(PPI_network) return(PPI_network@nodes))
kegg_diff_pathways_nodes.long <- do.call("rbind",
diff_pathways.nodes.corrected.list)
kegg_diff_pathways_nodes.long$value <- 1
kegg_diff_pathways_nodes <-
pivot_wider(data = kegg_diff_pathways_nodes.long[,c("Symbol",
"pathway_name",
"value")],
names_from = "pathway_name",
values_from = "value")
# kegg_diff_pathways_nodes <- dcast(kegg_diff_pathways_nodes.long,
#                                       Symbol ~ pathway_name,
#                                       value.var = "value")
kegg_diff_pathways_nodes[is.na(kegg_diff_pathways_nodes)]<- 0
kegg_diff_pathways_nodes$sum <- rowSums(kegg_diff_pathways_nodes[,-1])
kegg_diff_pathways_nodes$pathway <- sapply(1:nrow(kegg_diff_pathways_nodes), function(i_symbol){
if (kegg_diff_pathways_nodes$sum[i_symbol]==1){
return(diff_pathways[which(kegg_diff_pathways_nodes[i_symbol,diff_pathways]==1)])
} else {
return(NA)
}
})
# save(kegg_diff_pathways_nodes,
#      file = "kegg_diff_pathways_network/kegg_diff_pathways_nodes_df.RData")
#
# save(kegg_diff_pathways_interactions,
#      file = "kegg_diff_pathways_network/kegg_diff_pathways_interactions_df.RData")
# for all_CFTR_interactors.PPI.min
load("CFTR_interactors/CFTR_interactors_nodes_df.RData")
load("CFTR_interactors/CFTR_interactors_interactions_df.RData")
# all_CFTR_interactions.PPI.connected.min <- all_CFTR_interactions.PPI.connected.min[which(all_CFTR_interactions.PPI.connected.min$status !="unchanged"),]
# for extend_to_CFTR_interactors
source("scripts/pathways_to_network/CFTR_interactors_helper.R")
CF_PPI_network <- new("PPI_network",
interactions=kegg_diff_pathways_interactions,
nodes=kegg_diff_pathways_nodes)
CF_PPI_network.CFTR_extended <- extend_to_CFTR_interactors(CF_PPI_network)
CF_PPI_network.CFTR_extended.nodes <- CF_PPI_network.CFTR_extended@nodes
CF_PPI_network.CFTR_extended.interactions <- CF_PPI_network.CFTR_extended@interactions
# # test to remove SRC and CAV1-CAV2
# CF_PPI_network.CFTR_extended.interactions.new <- CF_PPI_network.CFTR_extended.interactions
# CF_PPI_network.CFTR_extended.nodes.new <- CF_PPI_network.CFTR_extended.nodes
# save(CF_PPI_network.CFTR_extended.nodes,
#      file = "kegg_diff_pathways_network/kegg_diff_pathways_nodes_with_CFTR_interactors_df.RData")
#
# save(CF_PPI_network.CFTR_extended.interactions,
#      file = "kegg_diff_pathways_network/kegg_diff_pathways_interactions_with_CFTR_interactors_df.RData")
#             file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_lcc_tagged_interactions_df.txt",
#             sep = "\t",
#             row.names = F,
#             quote = FALSE)
#
# write.table(CF_PPI_network.lcc.node_type@nodes,
#             file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_lcc_tagged_nodes_df
source("~/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/kegg_diff_pathways_network_scripts/kegg_diff_pathways_layout.R")
source("~/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/kegg_diff_pathways_network_scripts/kegg_diff_pathways_network_analysis_final.R")
source("~/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/kegg_diff_pathways_network_scripts/kegg_diff_pathways_network_analysis_final.R")
source("~/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/kegg_diff_pathways_network_scripts/kegg_diff_pathways_network_analysis_final.R")
CF_PPI_network.bc.hist
