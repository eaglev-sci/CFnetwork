Symbol2UniprotID <- kegg_pathways_nodes.carac.corrected
corrections.df <- kegg_pathways_corrections.example
View(corrections.df)
PPI_network.temp <- PPI_network
# Debug
source_colname <- "genesymbol_source",
return(PPI_network.temp)
# Debug
source_colname <- "genesymbol_source"
target_colname <- "genesymbol_target"
# Debug
i_act <- 9
action <- corrections.df[i_act, "action"]
source <- corrections.df[i_act, "Source"]
source_UniprotID <- corrections.df[i_act, "Source_UniprotID"]
effect <- corrections.df[i_act, "Effect"]
target <- corrections.df[i_act, "Target"]
pathway_name <- corrections.df[i_act, "pathway_name"]
action
source
source_UniprotID
effect
target
pathway_name
# print("lo")
PPI_network.temp <- change_effect(PPI_network = PPI_network.temp,
Source = source,
Effect = effect,
Target = target,
Pathway_name = pathway_name)
interaction_id <- which(PPI_network@interactions$genesymbol_source==Source &
PPI_network@interactions$genesymbol_target==Target)
# Debug
PPI_network <- PPI_network.temp
Source <- source
Effect <- effect
Target <- target
Pathway_name <- pathway_name
interaction_id <- which(PPI_network@interactions$genesymbol_source==Source &
PPI_network@interactions$genesymbol_target==Target)
interaction_id
if (length(interaction_id)==0){
stop('The interaction does not exist.')
}
previous_effect_arrow <- PPI_network@interactions[interaction_id,"arrow"]
PPI_network@interactions[interaction_id,"effect"] <- Effect
Effect_arrow <- effect_arrow.df[which(effect_arrow.df$effect==Effect),"arrow"]
PPI_network@interactions[interaction_id,"arrow"] <- Effect_arrow
Effect_arrow
effect_arrow.df
View(effect_arrow.df)
View(kegg_pathway_df.signaling.interactions.df)
class(kegg_pathway_df.signaling.interactions.df)
View(effect_arrow.df)
View(kegg_pathway_df.signaling.interactions.df)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(tidyr)
library(tidyverse)
load("kegg_diff_pathways/fgsea_nes_diff_pathways.RData")
diff_pathways <- rownames(fgsea_es_diff_pathways)
# for class PPI_network and preprocess_PPI_network()
source("scripts/pathways_to_network/network_utils.R")
# KEGG pathways from Omnipath
load("kegg_pathways/kegg_pathways_from_omnipath_list.RData")
load("kegg_pathways/kegg_pathways_from_omnipath_nodes_carac.RData")
kegg_pathway_df.signaling.interactions.df <-
do.call("rbind",
kegg_pathway_df.signaling.interactions.list.final)
load("kegg_pathways/symbols_from_kegg_pathways_from_omnipathR_list.RData")
kegg_pathway_df.signaling.nodes.df <-
do.call("rbind",
kegg_pathway_df.signaling.nodes.list.final)
View(kegg_pathway_df.signaling.interactions.df)
class(kegg_pathway_df.signaling.interactions.df)
interactions_colnames_to_keep <- c("source",
"target",
"relation_id",
"kegg_id_source",
"kegg_id_target")
kegg_pathway_df.signaling.interactions.df <-
as_tibble(kegg_pathway_df.signaling.interactions.df)
kegg_pathways_interactions.unique. <-
kegg_pathway_df.signaling.interactions.df %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
View(kegg_pathway_df.signaling.interactions.df)
# Kegg pathways correction for gene symbols
kegg_pathways_nodes.carac.corrected <-
add_new_nodes_uniprot_ids(Symbol2UniprotID = kegg_pathways_nodes.carac,
corrections.df = kegg_pathways_corrections)
# Effect arrow
effect_arrow.df <- unique(kegg_pathway_df.signaling.interactions.df[,c("effect", "arrow")])
View(effect_arrow.df)
which(effect_arrow.df$effect=="compound")
effect_arrow.df
effect_arrow.df %>%
mutate(effect = if_else(effect == "compound",
paste(effect, arrow, sep = " - "),
effect))
test <- effect_arrow.df %>%
mutate(effect = if_else(effect == "compound",
paste(effect, arrow, sep = " - "),
effect))
View(test)
effect_arrow.df <- effect_arrow.df %>%
mutate(effect = if_else(effect == "compound",
paste(effect, arrow, sep = " - "),
effect))
effect_arrow.df
PPI_network.temp <- PPI_network
# Debug
source_colname <- "genesymbol_source"
target_colname <- "genesymbol_target"
# Debug
i_act <- 9
action <- corrections.df[i_act, "action"]
source <- corrections.df[i_act, "Source"]
# Debug
PPI_network <- diff_PPI_network
Symbol2UniprotID <- kegg_pathways_nodes.carac.corrected
corrections.df <- kegg_pathways_corrections.example
# to test
diff_pathway_name <- diff_pathways[1]
print("##### CORRECTION #####")
print(diff_pathway_name)
diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[[diff_pathway_name]]
diff_pathway_df.interactions <-
as_tibble(diff_pathway_df.interactions)
diff_pathway_df.interactions.unique <-
diff_pathway_df.interactions %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
diff_pathway_df.interactions.unique$manually_added <- FALSE
diff_pathway_df.nodes <-
kegg_pathway_df.signaling.nodes.list.final[[diff_pathway_name]]
diff_PPI_network <- new("PPI_network",
interactions=as.data.frame(diff_pathway_df.interactions.unique),
nodes=as.data.frame(diff_pathway_df.nodes))
## Preprocess
diff_PPI_network <- preprocess_PPI_network(diff_PPI_network)
# Preprocess
kegg_pathways_corrections.example <- kegg_pathways_corrections[which(kegg_pathways_corrections$pathway_name==diff_pathway_name),]
print(kegg_pathways_corrections.example)
# Kegg pathways correction file
kegg_pathways_corrections <-
read.table("kegg_diff_pathways/kegg_diff_pathways_corrections_w_EZR_2023_07_07.txt",
sep = "\t",
header = T)
# Manual curation: for add_new_nodes_uniprot_ids()
source("scripts/kegg_pathways_scripts/kegg_pathways_manual_curation.R")
# Manual curation: for add_new_nodes_uniprot_ids()
source("scripts/kegg_pathways_scripts/kegg_pathways_manual_curation.R")
# Kegg pathways correction for gene symbols
kegg_pathways_nodes.carac.corrected <-
add_new_nodes_uniprot_ids(Symbol2UniprotID = kegg_pathways_nodes.carac,
corrections.df = kegg_pathways_corrections)
# Manual curation: for add_new_nodes_uniprot_ids()
source("scripts/kegg_pathways_scripts/kegg_pathways_manual_curation.R")
# Manual curation: for add_new_nodes_uniprot_ids()
source("scripts/kegg_pathways_scripts/kegg_pathways_manual_curation.R")
# Kegg pathways correction for gene symbols
kegg_pathways_nodes.carac.corrected <-
add_new_nodes_uniprot_ids(Symbol2UniprotID = kegg_pathways_nodes.carac,
corrections.df = kegg_pathways_corrections)
diff_pathways.PPI_network.corrected.list <- lapply(diff_pathways,
function(diff_pathway_name){
# to test
diff_pathway_name <- diff_pathways[1]
print("##### CORRECTION #####")
print(diff_pathway_name)
# print("#####")
# diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[names(kegg_pathway_df.signaling.interactions.list.final)==diff_pathway_name][[1]]
diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[[diff_pathway_name]]
diff_pathway_df.interactions <-
as_tibble(diff_pathway_df.interactions)
diff_pathway_df.interactions.unique <-
diff_pathway_df.interactions %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
# diff_pathway_df.interactions.unique <- unique(diff_pathway_df.interactions[,!(colnames(diff_pathway_df.interactions) %in% c("source",
#                                                                                                                       "target",
#                                                                                                                       "relation_id",
#                                                                                                                       "kegg_id_source",
#                                                                                                                       "kegg_id_target"))])
diff_pathway_df.interactions.unique$manually_added <- FALSE
# diff_pathway_df.nodes <- kegg_pathway_df.signaling.nodes.list.final[names(kegg_pathway_df.signaling.nodes.list.final)==diff_pathway_name][[1]]
diff_pathway_df.nodes <-
kegg_pathway_df.signaling.nodes.list.final[[diff_pathway_name]]
diff_PPI_network <- new("PPI_network",
interactions=as.data.frame(diff_pathway_df.interactions.unique),
nodes=as.data.frame(diff_pathway_df.nodes))
## Preprocess
diff_PPI_network <- preprocess_PPI_network(diff_PPI_network)
# Preprocess
kegg_pathways_corrections.example <- kegg_pathways_corrections[which(kegg_pathways_corrections$pathway_name==diff_pathway_name),]
print(kegg_pathways_corrections.example)
diff_PPI_network.corrected <-
correct_PPI_network(PPI_network = diff_PPI_network,
Symbol2UniprotID = kegg_pathways_nodes.carac.corrected,
corrections.df = kegg_pathways_corrections.example)
return(diff_PPI_network.corrected)
})
# Correct each diff pathways interactions with manual curation
diff_pathways.PPI_network.corrected.list <- lapply(diff_pathways,
function(diff_pathway_name){
# to test
diff_pathway_name <- diff_pathways[1]
print("##### CORRECTION #####")
print(diff_pathway_name)
# print("#####")
# diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[names(kegg_pathway_df.signaling.interactions.list.final)==diff_pathway_name][[1]]
diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[[diff_pathway_name]]
diff_pathway_df.interactions <-
as_tibble(diff_pathway_df.interactions)
diff_pathway_df.interactions.unique <-
diff_pathway_df.interactions %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
# diff_pathway_df.interactions.unique <- unique(diff_pathway_df.interactions[,!(colnames(diff_pathway_df.interactions) %in% c("source",
#                                                                                                                       "target",
#                                                                                                                       "relation_id",
#                                                                                                                       "kegg_id_source",
#                                                                                                                       "kegg_id_target"))])
diff_pathway_df.interactions.unique$manually_added <- FALSE
# diff_pathway_df.nodes <- kegg_pathway_df.signaling.nodes.list.final[names(kegg_pathway_df.signaling.nodes.list.final)==diff_pathway_name][[1]]
diff_pathway_df.nodes <-
kegg_pathway_df.signaling.nodes.list.final[[diff_pathway_name]]
diff_PPI_network <- new("PPI_network",
interactions=as.data.frame(diff_pathway_df.interactions.unique),
nodes=as.data.frame(diff_pathway_df.nodes))
## Preprocess
diff_PPI_network <- preprocess_PPI_network(diff_PPI_network)
# Preprocess
kegg_pathways_corrections.example <- kegg_pathways_corrections[which(kegg_pathways_corrections$pathway_name==diff_pathway_name),]
# print(kegg_pathways_corrections.example)
diff_PPI_network.corrected <-
correct_PPI_network(PPI_network = diff_PPI_network,
Symbol2UniprotID = kegg_pathways_nodes.carac.corrected,
corrections.df = kegg_pathways_corrections.example)
return(diff_PPI_network.corrected)
})
diff_pathways.PPI_network.corrected.list
diff_pathways.interactions.corrected.list <- lapply(diff_pathways.PPI_network.corrected.list, function(PPI_network) return(PPI_network@interactions))
interactions_in_diff_kegg_pathways <- do.call("rbind", diff_pathways.interactions.corrected.list)
interactions_in_diff_kegg_pathways$interaction_id <- apply(X = interactions_in_diff_kegg_pathways[,c("uniprot_source",
"uniprot_target",
"effect")],
MARGIN = 1,
FUN = function(x) {
# print(x)
return(paste(x, collapse = "_"))
})
interactions_in_diff_kegg_pathways$value <- 1
interactions_in_diff_kegg_pathways.long <-
interactions_in_diff_kegg_pathways[,c("interaction_id","pathway_name", "value")]
interactions_in_diff_kegg_pathways_wide_df <- pivot_wider(interactions_in_diff_kegg_pathways.long,
names_from = "pathway_name",
values_from = "value")
# interactions_in_diff_kegg_pathways_wide_df <- dcast(interactions_in_diff_kegg_pathways,
#                                       interaction_id ~ pathway_name,
#                                       value.var = "value")
interactions_in_diff_kegg_pathways_wide_df[is.na(interactions_in_diff_kegg_pathways_wide_df)]<- 0
interactions_in_diff_kegg_pathways_wide_df$sum.interaction <- rowSums(interactions_in_diff_kegg_pathways_wide_df[,-1])
View(interactions_in_diff_kegg_pathways_wide_df)
length(diff_pathways.PPI_network.corrected.list)
lapply(diff_pathways.PPI_network.corrected.list, dim)
diff_pathways.PPI_network.corrected.list[[1]]
dim(diff_pathways.PPI_network.corrected.list[[1]])
class(diff_pathways.PPI_network.corrected.list)
class(diff_pathways.PPI_network.corrected.list[[1]])
class(diff_pathways.PPI_network.corrected.list[[1]]@interactions)
dim(diff_pathways.PPI_network.corrected.list[[1]]@interactions)
dim(diff_pathways.PPI_network.corrected.list[[2]]@interactions)
dim(diff_pathways.PPI_network.corrected.list[[3]]@interactions)
# Correct each diff pathways interactions with manual curation
diff_pathways.PPI_network.corrected.list <- lapply(diff_pathways,
function(diff_pathway_name){
# # to test
# diff_pathway_name <- diff_pathways[1]
print("##### CORRECTION #####")
print(diff_pathway_name)
# print("#####")
# diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[names(kegg_pathway_df.signaling.interactions.list.final)==diff_pathway_name][[1]]
diff_pathway_df.interactions <- kegg_pathway_df.signaling.interactions.list.final[[diff_pathway_name]]
diff_pathway_df.interactions <-
as_tibble(diff_pathway_df.interactions)
diff_pathway_df.interactions.unique <-
diff_pathway_df.interactions %>%
dplyr::select(-interactions_colnames_to_keep) %>%
distinct()
# diff_pathway_df.interactions.unique <- unique(diff_pathway_df.interactions[,!(colnames(diff_pathway_df.interactions) %in% c("source",
#                                                                                                                       "target",
#                                                                                                                       "relation_id",
#                                                                                                                       "kegg_id_source",
#                                                                                                                       "kegg_id_target"))])
diff_pathway_df.interactions.unique$manually_added <- FALSE
# diff_pathway_df.nodes <- kegg_pathway_df.signaling.nodes.list.final[names(kegg_pathway_df.signaling.nodes.list.final)==diff_pathway_name][[1]]
diff_pathway_df.nodes <-
kegg_pathway_df.signaling.nodes.list.final[[diff_pathway_name]]
diff_PPI_network <- new("PPI_network",
interactions=as.data.frame(diff_pathway_df.interactions.unique),
nodes=as.data.frame(diff_pathway_df.nodes))
## Preprocess
diff_PPI_network <- preprocess_PPI_network(diff_PPI_network)
# Preprocess
kegg_pathways_corrections.example <- kegg_pathways_corrections[which(kegg_pathways_corrections$pathway_name==diff_pathway_name),]
# print(kegg_pathways_corrections.example)
diff_PPI_network.corrected <-
correct_PPI_network(PPI_network = diff_PPI_network,
Symbol2UniprotID = kegg_pathways_nodes.carac.corrected,
corrections.df = kegg_pathways_corrections.example)
return(diff_PPI_network.corrected)
})
diff_pathways.interactions.corrected.list <- lapply(diff_pathways.PPI_network.corrected.list, function(PPI_network) return(PPI_network@interactions))
interactions_in_diff_kegg_pathways <- do.call("rbind", diff_pathways.interactions.corrected.list)
View(interactions_in_diff_kegg_pathways)
interactions_in_diff_kegg_pathways$interaction_id <- apply(X = interactions_in_diff_kegg_pathways[,c("uniprot_source",
"uniprot_target",
"effect")],
MARGIN = 1,
FUN = function(x) {
# print(x)
return(paste(x, collapse = "_"))
})
View(interactions_in_diff_kegg_pathways)
interactions_in_diff_kegg_pathways$value <- 1
interactions_in_diff_kegg_pathways.long <-
interactions_in_diff_kegg_pathways[,c("interaction_id","pathway_name", "value")]
interactions_in_diff_kegg_pathways_wide_df <- pivot_wider(interactions_in_diff_kegg_pathways.long,
names_from = "pathway_name",
values_from = "value")
View(interactions_in_diff_kegg_pathways_wide_df)
# interactions_in_diff_kegg_pathways_wide_df <- dcast(interactions_in_diff_kegg_pathways,
#                                       interaction_id ~ pathway_name,
#                                       value.var = "value")
interactions_in_diff_kegg_pathways_wide_df[is.na(interactions_in_diff_kegg_pathways_wide_df)]<- 0
View(interactions_in_diff_kegg_pathways_wide_df)
interactions_in_diff_kegg_pathways_wide_df$sum.interaction <- rowSums(interactions_in_diff_kegg_pathways_wide_df[,-1])
# if the sum is 1 then put the name of the pathway
interactions_in_diff_kegg_pathways_wide_df$pathway.interaction <- sapply(1:nrow(interactions_in_diff_kegg_pathways_wide_df), function(i_interaction){
if (interactions_in_diff_kegg_pathways_wide_df$sum.interaction[i_interaction]==1){
return(diff_pathways[which(interactions_in_diff_kegg_pathways_wide_df[i_interaction,diff_pathways]==1)])
} else {
return(NA)
}
})
interactions_in_diff_kegg_pathways.unique <- unique(interactions_in_diff_kegg_pathways[,!(colnames(interactions_in_diff_kegg_pathways) %in% c("pathway_name", "value", "manually_added","type"))])
interactions_in_diff_kegg_pathways.unique <- merge(interactions_in_diff_kegg_pathways.unique,
interactions_in_diff_kegg_pathways_wide_df,
by = "interaction_id")
# Good name
kegg_diff_pathways_interactions <- interactions_in_diff_kegg_pathways.unique
View(kegg_diff_pathways_interactions)
# get the nodes
kegg_pathways_nodes <-
read.table(file = "kegg_pathways/symbols_from_kegg_pathways_from_omnipathR.txt",
sep = "\t")
diff_pathways.nodes.corrected.list <-
lapply(diff_pathways.PPI_network.corrected.list,
function(PPI_network) return(PPI_network@nodes))
kegg_diff_pathways_nodes.long <- do.call("rbind",
diff_pathways.nodes.corrected.list)
kegg_diff_pathways_nodes.long$value <- 1
kegg_diff_pathways_nodes <-
pivot_wider(data = kegg_diff_pathways_nodes.long[,c("Symbol",
"pathway_name",
"value")],
names_from = "pathway_name",
values_from = "value")
# kegg_diff_pathways_nodes <- dcast(kegg_diff_pathways_nodes.long,
#                                       Symbol ~ pathway_name,
#                                       value.var = "value")
kegg_diff_pathways_nodes[is.na(kegg_diff_pathways_nodes)]<- 0
kegg_diff_pathways_nodes$sum <- rowSums(kegg_diff_pathways_nodes[,-1])
kegg_diff_pathways_nodes$pathway <- sapply(1:nrow(kegg_diff_pathways_nodes), function(i_symbol){
if (kegg_diff_pathways_nodes$sum[i_symbol]==1){
return(diff_pathways[which(kegg_diff_pathways_nodes[i_symbol,diff_pathways]==1)])
} else {
return(NA)
}
})
rm(kegg_pathways_interactions.unique,
interactions_in_diff_kegg_pathways,
interactions_in_diff_kegg_pathways_wide_df,
interactions_in_diff_kegg_pathways.unique)
# for all_CFTR_interactors.PPI
load("CFTR_interactors/CFTR_interactors_nodes_df.RData")
load("CFTR_interactors/CFTR_interactors_interactions_df.RData")
dim(all_CFTR_interactions.PPI.connected.min)
all_CFTR_interactions.PPI.connected.min <- all_CFTR_interactions.PPI.connected.min[which(all_CFTR_interactions.PPI.connected.min$status !="unchanged"),]
dim(all_CFTR_interactions.PPI.connected.min)
# for all_CFTR_interactors.PPI
load("CFTR_interactors/CFTR_interactors_nodes_df.RData")
dim(all_CFTR_interactions.PPI.connected.min)
rm(all_CFTR_interactions.PPI.connected.min)
# for all_CFTR_interactors.PPI.min
load("CFTR_interactors/CFTR_interactors_nodes_df.RData")
load("CFTR_interactors/CFTR_interactors_interactions_df.RData")
dim(kegg_diff_pathways_interactions)
dim(kegg_diff_pathways_nodes)
# all_CFTR_interactions.PPI.connected.min <- all_CFTR_interactions.PPI.connected.min[which(all_CFTR_interactions.PPI.connected.min$status !="unchanged"),]
# for extend_to_CFTR_interactors
source("pathways_to_network/CFTR_interactors_helper.R")
# all_CFTR_interactions.PPI.connected.min <- all_CFTR_interactions.PPI.connected.min[which(all_CFTR_interactions.PPI.connected.min$status !="unchanged"),]
# for extend_to_CFTR_interactors
source("scripts/pathways_to_network/CFTR_interactors_helper.R")
CF_PPI_network <- new("PPI_network",
interactions=kegg_diff_pathways_interactions,
nodes=kegg_diff_pathways_nodes)
CF_PPI_network.CFTR_extended <- extend_to_CFTR_interactors(CF_PPI_network)
CF_PPI_network.CFTR_extended.nodes <- CF_PPI_network.CFTR_extended@nodes
CF_PPI_network.CFTR_extended.interactions <- CF_PPI_network.CFTR_extended@interactions
dim(CF_PPI_network.CFTR_extended.nodes)
dim(CF_PPI_network.CFTR_extended.interactions)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
# for PPI_network class
source("scripts/pathways_to_network/network_utils.R")
getwd()
setwd("/Users/matthieu/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/")
# for PPI_network class
source("scripts/pathways_to_network/network_utils.R")
# for endpoint_tag(),
# gene_symbol_sanity_check(),
# tag_weird_endpoints(),
# remove_weird_endpoints(),
# remove_expression_interactions(),
# remove_indirect_interactions(),
# remove_same_interactions(),
# binding_interaction()
source("scripts/kegg_diff_pathways_network_scripts/simplify_network_helper.R")
# for get_node_type(),
source("scripts/kegg_diff_pathways_network_scripts/network_visualization_helper.R")
# KEGG DIFF PATHWAYS - All proteins
load("kegg_diff_pathways_networks/kegg_diff_pathways_interactions_with_CFTR_interactors_df.RData")
# KEGG DIFF PATHWAYS - All proteins
load("kegg_diff_pathways_networks/kegg_diff_pathways_interactions_with_CFTR_interactors_df.RData")
# KEGG DIFF PATHWAYS - All proteins
load("kegg_diff_pathways_network/kegg_diff_pathways_interactions_with_CFTR_interactors_df.RData")
load("kegg_diff_pathways_network/kegg_diff_pathways_nodes_with_CFTR_interactors_df.RData")
CF_PPI_network.CFTR_extended <- new("PPI_network",
interactions=CF_PPI_network.CFTR_extended.interactions,
nodes=CF_PPI_network.CFTR_extended.nodes)
# Tag Endpoints: TF and Caspases (Apoptosis)
CF_PPI_network.CFTR_extended.endpoint_tag <- dorothea_tag(CF_PPI_network.CFTR_extended)
t
# Remove expression interactions (dorothea and kegg)
CF_PPI_network.without_expression <-
remove_expression_interactions(CF_PPI_network.CFTR_extended.endpoint_tag)
dim(CF_PPI_network.without_expression@interactions)
dim(CF_PPI_network.without_expression@nodes)
CF_PPI_network.direct <-
remove_indirect_interactions(CF_PPI_network.without_expression)
# # Tag receptors and receptor ligands
CF_PPI_network.direct.rep_tag <- tag_prot_cat(CF_PPI_network.direct)
CF_PPI_network.direct.node_type <- get_node_type(CF_PPI_network.direct.rep_tag,
# interactors = CFTR_interactors,
include_weird_endpoints = FALSE)
CF_PPI_network.curated <- remove_same_interactions(CF_PPI_network.direct)
# Tag receptors and receptor ligands
CF_PPI_network.curated.rep_tag <- tag_prot_cat(CF_PPI_network.curated)
# Remove non receptor that don't have downstream interactions
# CF_PPI_network.lcc.curated.tagged <- tag_non_source_receptors_interactions(CF_PPI_network.lcc.curated)
CF_PPI_network.curated.2 <- remove_non_source_receptors(CF_PPI_network.curated.rep_tag)
CF_PPI_network.curated.2.node_type <- get_node_type(CF_PPI_network.curated.2,
# interactors = CFTR_interactors,
include_weird_endpoints = FALSE)
dim(CF_PPI_network.curated.2)
dim(CF_PPI_network.curated.2@interactions)
dim(CF_PPI_network.curated.2@nodes)
colnames(CF_PPI_network.curated.2@interactions)
table(CF_PPI_network.curated.2@interactions$CyFi_MAP_interactions)
colnames(CF_PPI_network.curated.2@nodes)
colnames(CF_PPI_network.curated.2@nodes$CFTR_interactor)
table(CF_PPI_network.curated.2@nodes$CFTR_interactor)
dim(CF_PPI_network.curated.2@nodes)
CF_PPI_network.lcc <- extract_largest_connected_component(CF_PPI_network.curated.2)
dim(CF_PPI_network.lcc@interactions)
dim(CF_PPI_network.lcc@nodes)
source("pathways_to_network_scripts/network_utils.R")
source("scripts/pathways_to_network_scripts/network_utils.R")
getwd()
source("scripts/pathways_to_network/network_utils.R")
CF_PPI_network.lcc.node_type.interactions <-
read.table(file = "kegg_diff_pathways_networks/diff_kegg_pathways_with_CFTR_interactors_PPI_lcc_tagged_interactions_df_2023_07_10.txt",
sep = "\t",
header = T,
check.names = F)
CF_PPI_network.lcc.node_type.interactions <-
read.table(file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_lcc_tagged_interactions_df_2023_07_10.txt",
sep = "\t",
header = T,
check.names = F)
CF_PPI_network.lcc.node_type.interactions <-
read.table(file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_tagged_interactions_df_2023_07_10.txt",
sep = "\t",
header = T,
check.names = F)
CF_PPI_network.lcc.node_type.interactions <-
read.table(file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_direct_tagged_interactions_df_2023_07_10.txt",
sep = "\t",
header = T,
check.names = F)
CF_PPI_network.lcc.node_type.nodes <-
read.table(file = "kegg_diff_pathways_network/diff_kegg_pathways_with_CFTR_interactors_PPI_direct_tagged_nodes_df_2023_07_10.txt",
sep = "\t",
header = T,
check.names = F)
View(CF_PPI_network.lcc.node_type.interactions)
