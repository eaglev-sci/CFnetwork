control_samples
inf_samples <- Rehman_exp_coldata %>%
filter(Treatment=="IL-17+TNFa") %>%
pull(Simple_id)
inf_samples
class(Rehman_exp_RNA_matrix_norm)
colnames(Rehman_exp_RNA_matrix_norm)
plage_es <- gsva(Rehman_exp_RNA_matrix_norm,
genesets_list,
verbose=FALSE,
method="plage")
plage_output_df <- data.frame(plage_es)
# Perform t-tests for each gene
plage_t_test_p_values <- apply(X = plage_output_df,
MARGIN = 1,
FUN = function(x) {
t_test_result <- t.test(x[CF_samples], x[non_CF_samples])
return(t_test_result$p.value)
})
pheatmap(plage_output_df)
# Perform t-tests for each gene
plage_t_test_p_values <- apply(X = plage_output_df,
MARGIN = 1,
FUN = function(x) {
t_test_result <- t.test(x[control_samples], x[inf_samples])
return(t_test_result$p.value)
})
colnames(plage_output_df)
inf_samples
gsub(x = inf_samples,
pattern = "[-|+]",
replacement = ".")
inf_samples <- gsub(x = inf_samples,
pattern = "[-|+]",
replacement = ".")
# Perform t-tests for each gene
plage_t_test_p_values <- apply(X = plage_output_df,
MARGIN = 1,
FUN = function(x) {
t_test_result <- t.test(x[control_samples], x[inf_samples])
return(t_test_result$p.value)
})
plage_adjusted_p_values <- p.adjust(plage_t_test_p_values,
method = "fdr")
names(plage_adjusted_p_values[plage_adjusted_p_values < 0.05])
plage_adjusted_p_values
length(plage_adjusted_p_values < 0.05)
gsva_es <- gsva(Rehman_exp_RNA_matrix_norm,
genesets_list,
verbose=FALSE,
method="gsva",
kcdf="Poisson")
gsva_output_df <- data.frame(gsva_es)
pheatmap(gsva_output_df)
# Perform t-tests for each gene
gsva_t_test_p_values <- apply(X = gsva_output_df,
MARGIN = 1,
FUN = function(x) {
t_test_result <- t.test(x[control_samples], x[inf_samples])
return(t_test_result$p.value)
})
gsva_adjusted_p_values <- p.adjust(gsva_t_test_p_values,
method = "fdr")
names(gsva_adjusted_p_values[gsva_adjusted_p_values < 0.05])
gsva_adjusted_p_values
gsva_adjusted_p_values[order(gsva_adjusted_p_values, decreasing = F)]
plage_adjusted_p_values[order(plage_adjusted_p_values, decreasing = F)]
ssgsea_es <- gsva(Rehman_exp_RNA_matrix_norm,
genesets_list,
verbose=FALSE,
method="ssgsea")
ssgsea_output_df <- data.frame(ssgsea_es)
pheatmap(ssgsea_output_df)
# Perform t-tests for each gene
ssgsea_t_test_p_values <- apply(X = ssgsea_output_df,
MARGIN = 1,
FUN = function(x) {
# print(x[CF_samples])
# print(x[non_CF_samples])
t_test_result <- t.test(x[control_samples], x[inf_samples])
return(t_test_result$p.value)
})
ssgsea_adjusted_p_values <- p.adjust(ssgsea_t_test_p_values,
method = "fdr")
names(ssgsea_adjusted_p_values[ssgsea_adjusted_p_values < 0.05])
ssgsea_adjusted_p_values[order(ssgsea_adjusted_p_values, decreasing = F)]
zscore_es <- gsva(Rehman_exp_RNA_matrix_norm,
genesets_list,
verbose=FALSE,
method="zscore")
zscore_output_df <- data.frame(zscore_es)
pheatmap(zscore_output_df)
# Perform t-tests for each gene
zscore_t_test_p_values <- apply(X = zscore_output_df,
MARGIN = 1,
FUN = function(x) {
# print(x[CF_samples])
# print(x[non_CF_samples])
t_test_result <- t.test(x[control_samples],
x[inf_samples])
return(t_test_result$p.value)
})
zscore_adjusted_p_values <- p.adjust(zscore_t_test_p_values,
method = "fdr")
names(zscore_adjusted_p_values[zscore_adjusted_p_values < 0.05])
table(zscore_adjusted_p_values < 0.05)
zscore_adjusted_p_values[order(zscore_adjusted_p_values, decreasing = F)]
.libPaths()
.libPaths()
pheatmap(plage_output_df)
plage_adjusted_p_values[order(plage_adjusted_p_values, decreasing = F)]
length(plage_adjusted_p_values < 0.05)
names(plage_adjusted_p_values[plage_adjusted_p_values < 0.05])
names(gsva_adjusted_p_values[gsva_adjusted_p_values < 0.05])
pheatmap(gsva_output_df)
.libPaths()
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/rRoma_obj_breast_cptac.Rdata")
pheatmap::pheatmap(rRoma.prot$ModuleMatrix)
pheatmap::pheatmap(rRoma.prot$SampleMatrix)
source("~/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/Rehman_TNF_IL17_gsva.R")
.libPaths()
library(rRoma)
summary(MatData)
summary(sample_labels)
AllHall <- SelectFromMSIGdb("HALLMARK")
AllHall <- lapply(AllHall, function(x){
x$Name <- sub("HALLMARK_", "", x$Name)
x
})
AllHall
.libPaths()
?install.packages
version
library(rRoma)
summary(MatData)
View(MatData)
dim(MatData)
MatData <- MatData[!rownames(MatData)== "", ]
sample_labels
AllHall <- SelectFromMSIGdb("HALLMARK")
AllHall
lapply(AllHall, function(x) print(x['Name']))
AllHall <- lapply(AllHall, function(x){
x$Name <- sub("HALLMARK_", "", x$Name)
x
})
lapply(AllHall, function(x) print(x['Name']))
?rROMA.R
?rROMA.R()
set.seed(123)
rRoma.output <- rRoma.R(MatData, AllHall)
load(file = "/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/data/Rehman_IL17_TNFa_rRoma_obj.Rdata)
load(file = "/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/data/Rehman_IL17_TNFa_rRoma_obj.Rdata")
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/data/Rehman_IL17_TNFa_rRoma_obj.Rdata")
View(rRoma.output)
load("./Rehman_IL17_TNFa_RNA_exp_matrix_norm.Rda")
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_com/Rehman_IL17_TNFa_RNA_exp_matrix_norm.Rda")
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_com/data/Rehman_IL17_TNFa_RNA_exp_matrix_norm.Rda")
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/data/Rehman_IL17_TNFa_RNA_exp_matrix_norm.Rda")
View(Rehman_exp_RNA_matrix_norm)
load("/Users/matthieu/ownCloud/Thèse/Systems Biology/project rROMA/rRoma_comp/data/Rehman_IL17_TNFa_sample_labels.Rda")
View(Rehman_exp_coldata)
View(rRoma.output$ModuleMatrix)
View(rRoma.output$ModuleMatrix)
shifted.modules <- which(rRoma.output$ModuleMatrix[, "ppv Median Exp"] <= 0.05)
shifted.modules
length(shifted.modules)
devtools::install_github("sysbio-curie/rRoma@main")
library(rRoma)
rRoma.output <- rRoma.R(MatData, AllHall)
detach("package:rRoma", unload = TRUE)
library(rRoma)
rRoma.output <- rRoma.R(MatData, AllHall)
detach("package:rRoma", unload = TRUE)
devtools::install_github("sysbio-curie/rRoma@fix_bug")
library(rRoma)
rRoma.output <- rRoma.R(MatData, AllHall)
library(OmnipathR)
getwd()
getwd()
knitr::opts_knit$set(root.dir = '../../')
getwd()
getwd()
setwsd("/Users/matthieu/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/fgsea")
setwd("/Users/matthieu/ownCloud/Thèse/Systems Biology/Meta-analysis article/CFnetwork/scripts/fgsea")
getwd()
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
getwd()
knitr::opts_knit$set(root.dir = '../..')
getwd()
getwd()
knitr::opts_knit$set(root.dir = '../..')
getwd()
getwd()
```{r, setup, include=FALSE}
```{r, setup, include=FALSE}
knitr::opts_knit$set(root.dir = '../..')
knitr::opts_knit$set(root.dir = '../..')
getwd()
getwd()
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
knitr::opts_knit$set(root.dir = '../..')
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "")
getwd()
```{r, setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../..")
getwd()
```{r, setup, include=FALSE, echo=FALSE}
getwd()
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../..")
getwd()
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
getwd()
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
getwd()
getwd()
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "../..")
getwd()
getwd()
getwd()
getwd()
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
getwd()
getwd()
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
getwd()
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
getwd()
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
getwd()
Verhaeghe_stat <- Verhaeghe_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Verhaeghe_stat)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
getwd()
Verhaeghe_stat <- Verhaeghe_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Verhaeghe_stat)
all_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
length(all_pathways)
kegg_pathways <- lapply(X = all_pathways, FUN = function(gene_list){
return(gene_list[lapply(gene_list, nchar)>0])
})
length(kegg_pathways)
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Verhaeghe_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Verhaeghe_DEG_HGNC <- read.table(file="differential_expression_data/Verhaeghe_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Verhaeghe_stat <- Verhaeghe_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Verhaeghe_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Verhaeghe_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Voisin_DEG_HGNC <- read.table("differential_expression_data/Voisin_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Voisin_stat <- Voisin_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Voisin_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
# nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Voisin_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Ogilvie_nasal_DEG_HGNC <-
read.table("differential_expression_data/Ogilvie_nasal_DEG_limma_unique_HGNC.csv",
sep = "\t",
header = T)
Ogilvie_stat <- Ogilvie_nasal_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Ogilvie_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Ogilvie_nasal_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Ogilvie_bronchial_DEG_HGNC <-
read.table("differential_expression_data/Ogilvie_bronchial_DEG_limma_unique_HGNC.csv",
sep = "\t",
header = T)
Ogilvie_stat <- Ogilvie_bronchial_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Ogilvie_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Ogilvie_bronchial_fgsea_report_kegg_pathways.RData")
View(fgseaRes)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
library(GEOquery)
Clarke_DEG_HGNC <-
read.table("differential_expression_data/Clarke_DEG_limma_unique_HGNC_2022_01_24.csv",
sep = "\t",
header = T)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
library(GEOquery)
Clarke_DEG_HGNC <-
read.table("differential_expression_data/Clarke_DEG_limma_unique_HGNC.csv",
sep = "\t",
header = T)
Clarke_stat <- Clarke_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Clarke_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = dorothea_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
library(GEOquery)
Clarke_DEG_HGNC <-
read.table("differential_expression_data/Clarke_DEG_limma_unique_HGNC.csv",
sep = "\t",
header = T)
Clarke_stat <- Clarke_DEG_HGNC[,c("Symbol", "t")]
ranks <- deframe(Clarke_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Clarke_fgsea_report_kegg_pathways.RData")
.libPaths()
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Balloy_DEG_HGNC_unique <- read.table(file = "differential_expression_data/Balloy_without_CTRL2_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Balloy_stat <- Balloy_DEG_HGNC_unique[,c("Symbol", "t")]
Balloy_ranks <- deframe(Balloy_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = dorothea_pathways,
stats    = Balloy_ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Balloy_DEG_HGNC_unique <- read.table(file = "differential_expression_data/Balloy_without_CTRL2_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Balloy_stat <- Balloy_DEG_HGNC_unique[,c("Symbol", "t")]
Balloy_ranks <- deframe(Balloy_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = Balloy_ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Balloy_without_CTRL2_unfiltered_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Zoso_DEG_unique_HGNC <- read.table("differential_expression_data/Zoso_DEG_limma_unique_HGNC.txt",
header = T,
sep = "\t")
Zoso_stat <- Zoso_DEG_unique_HGNC[,c("Symbol", "t")]
Zoso_ranks <- deframe(Zoso_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = Zoso_ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
#
# save(fgseaRes,
#      file = "fgsea_output/Zoso_fgsea_report_kegg_pathways.RData")
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Ling_DEG <- read.table("differential_expression_data/Ling_normalised_differential_expression_analysis_filtered_limma.txt",
sep = "\t",
header = T)
Ling_stat <- Ling_DEG[which(!is.na(Ling_DEG$Symbol)),c("Symbol", "t")]
Ling_ranks <- deframe(Ling_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = Ling_ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
# save(fgseaRes,
#      file = "fgsea_output/Ling_unfiltered_fgsea_report_kegg_pathways.RData")
View(Ling_normalised_differential_expression_analysis_filtered_limma.txt)
View(Ling_DEG)
unique(Ling_DEG$Symbol)
length(unique(Ling_DEG$Symbol))
dim(Ling_DEG)
knitr::opts_knit$set(echo = TRUE, root.dir = normalizePath("../../"))
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
Saint_Criq_DEG <- read.table("differential_expression_data/Saint_Criq_UNC_without_NCF_2_DEG_limma_unique_HGNC.txt",
sep = "\t",
header = T)
Saint_Criq_stat <- Saint_Criq_DEG[,c("Symbol", "t")]
Saint_Criq_ranks <- deframe(Saint_Criq_stat)
kegg_pathways <- gmtPathways("kegg_pathways/kegg_pathways_from_omnipathR.gmt")
fgseaRes <- fgsea(pathways = kegg_pathways,
stats    = Saint_Criq_ranks,
minSize  = 0,
maxSize  = 500,
#nperm=10000,
eps=0.0)
#
save(fgseaRes,
file = "fgsea_output/Saint_Criq_UNC_without_NCF_2_fgsea_report_kegg_pathways.RData")
.libPaths()
